---
version: v2beta1
name: clabernetes

vars:
  DEVSPACE_FLAGS: "-n clabernetes"

  REGISTRY:
    source: env
    default: ghcr.io/srl-labs/clabernetes

  PULL_POLICY: Always

  CLABERNETES: clabernetes
  IMAGE_BASE: ${REGISTRY}/${CLABERNETES}
  MANAGER_IMAGE: ${REGISTRY}/${CLABERNETES}-manager
  MANAGER_DEV_IMAGE: ${MANAGER_IMAGE}-dev
  LAUNCHER_IMAGE: ${REGISTRY}/${CLABERNETES}-launcher
  CLABVERTER_IMAGE: ${REGISTRY}/clabverter

  # always build w/ 0.0.0 -- overriden for actual releases by release profile. for "normal" builds
  # (not releases) we'll do VERSION-HASH, for releases we'll just override to have version tag.
  VERSION: 0.0.0
  COMMIT_HASH: $(git describe --always --abbrev=8)

  # to be set in ci
  RELEASE_VERSION: ""

localRegistry:
  enabled: false

images:
  clabernetes-dev:
    image: ${MANAGER_DEV_IMAGE}
    context: ../
    dockerfile: dev.Dockerfile
    rebuildStrategy: ignoreContextChanges
    tags:
      - $(git describe --always --abbrev=8)

  clabernetes:
    image: ${MANAGER_IMAGE}
    context: ../
    dockerfile: ../build/manager.Dockerfile
    rebuildStrategy: ignoreContextChanges
    buildArgs:
      VERSION: ${VERSION}-${COMMIT_HASH}
    tags:
      - dev-latest
      - $(git describe --always --abbrev=8)

  clabernetes-launcher:
    image: ${LAUNCHER_IMAGE}
    context: ../
    dockerfile: ../build/launcher.Dockerfile
    rebuildStrategy: ignoreContextChanges
    buildArgs:
      VERSION: ${VERSION}-${COMMIT_HASH}
    tags:
      - dev-latest
      - ${COMMIT_HASH}

  clabverter:
    image: ${CLABVERTER_IMAGE}
    context: ../
    dockerfile: ../build/clabverter.Dockerfile
    rebuildStrategy: ignoreContextChanges
    buildArgs:
      VERSION: ${VERSION}-${COMMIT_HASH}
    tags:
      - dev-latest
      - ${COMMIT_HASH}

deployments:
  clabernetes:
    helm:
      displayOutput: true
      chart:
        name: ../chart
      values:
        image: ${MANAGER_IMAGE}
        imagePullPolicy: ${PULL_POLICY}

dev:
  clabernetes:
    labelSelector:
      clabernetes/app: clabernetes
      clabernetes/component: manager
    container: manager
    devImage: ${MANAGER_DEV_IMAGE}
    sync:
      - path: ../.develop/:/clabernetes/.develop/
        disableDownload: true
      - path: ../:/clabernetes/
        disableDownload: true
        excludeFile: .dockerignore
    terminal:
      command: .develop/start.sh

profiles:
  - name: dev
    patches:
      # replace the image pull policy for dev (but only for init/manager!) to IfNotPresent so that
      # images loaded into kind are used for those folks that do local dev w/ kind/docker-desktop
      # w/out this we'd try to pull from ghcr on a tag that doesn't exist. note that this shouldn't
      # ever be annoying in "dev mode" since we'll already be syncing the code over via devspace.
      # we also set this the same way for the launcher image. if you are developing on a "real"
      # cluster and/or have a push/pull registry that you are using (and thereby don't have the
      # images loaded into kind/docker-desktop and are actually pulling), you probably want to add
      # the "dev-non-local" profile flag -- so for a devspace dev command from the root of this repo
      # you would do `devspace run dev --profile dev-non-local`
      - op: replace
        path: deployments.clabernetes.helm.values.imagePullPolicy
        value: IfNotPresent
      - op: add
        path: deployments.clabernetes.helm.values.managerLogLevel
        value: debug
      - op: add
        path: deployments.clabernetes.helm.values.controllerLogLevel
        value: debug
      - op: add
        path: deployments.clabernetes.helm.values.launcherLogLevel
        value: debug
      - op: add
        path: deployments.clabernetes.helm.values.launcherPullPolicy
        value: IfNotPresent
      - op: add
        path: deployments.clabernetes.helm.values.launcherImage
        value: ${LAUNCHER_IMAGE}
      - op: add
        path: deployments.clabernetes.helm.values.replicaCount
        value: 1

  - name: dev-non-local
    patches:
      - op: replace
        path: deployments.clabernetes.helm.values.imagePullPolicy
        value: Always
      - op: replace
        path: deployments.clabernetes.helm.values.launcherPullPolicy
        value: Always

  - name: release
    patches:
      - op: replace
        path: images.clabernetes.tags
        value:
          - latest
          - ${RELEASE_VERSION}
          - ${COMMIT_HASH}
      - op: replace
        path: images.clabernetes.buildArgs.VERSION
        value: ${RELEASE_VERSION}

      - op: replace
        path: images.clabernetes-launcher.tags
        value:
          - latest
          - ${RELEASE_VERSION}
          - ${COMMIT_HASH}
      - op: replace
        path: images.clabernetes-launcher.buildArgs.VERSION
        value: ${RELEASE_VERSION}

      - op: replace
        path: images.clabernetes-clabverter.tags
        value:
          - latest
          - ${RELEASE_VERSION}
          - ${COMMIT_HASH}
      - op: replace
        path: images.clabernetes-clabverter.buildArgs.VERSION
        value: ${RELEASE_VERSION}

pipelines:
  build:
    # override the default build pipeline so we don't bother building dev image in ci
    run: |
      build_images clabernetes clabernetes-launcher clabverter

  purge:
    run: |-
      stop_dev --all
      purge_deployments --all
      kubectl delete leases -n ${DEVSPACE_NAMESPACE} \
        $(kubectl get leases -n ${DEVSPACE_NAMESPACE} 2> /dev/null | grep "clabernetes" | awk '{print $1}') 2> /dev/null || true
